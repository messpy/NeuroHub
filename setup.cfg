# pytest設定
[tool:pytest]
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*
addopts =
    -v
    --tb=short
    --strict-markers
    --disable-warnings
    --color=yes
markers =
    unit: 単体テスト
    integration: 統合テスト
    slow: 実行時間の長いテスト
    api: API通信を伴うテスト

# coverage設定
[coverage:run]
source = agents, services
omit =
    */tests/*
    */test_*
    */__pycache__/*
    */venv/*
    */env/*
    setup.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

[coverage:html]
directory = htmlcov

# flake8設定
[flake8]
max-line-length = 120
exclude =
    .git,
    __pycache__,
    .pytest_cache,
    htmlcov,
    *.egg-info,
    venv,
    env
ignore =
    E501,  # line too long
    W503,  # line break before binary operator
    E203,  # whitespace before ':'
    F401   # imported but unused (一部のケースで必要)
per-file-ignores =
    tests/*:F401,F811,F841
    __init__.py:F401

# isort設定
[isort]
profile = black
multi_line_output = 3
line_length = 120
known_first_party = agents,services
skip =
    .git,
    __pycache__,
    .pytest_cache,
    htmlcov,
    *.egg-info,
    venv,
    env

# black設定 - black専用の設定ファイル(.black)またはpyproject.tomlで管理推奨
# [tool:black]
# line-length = 120
# target-version = py38, py39, py310, py311
# include = \.pyi?$
# exclude = '''
# /(
#     \.git
#     | \.mypy_cache
#     | \.pytest_cache
#     | \.tox
#     | venv
#     | env
#     | _build
#     | buck-out
#     | build
#     | dist
# )/
# '''
