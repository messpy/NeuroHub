# プロンプトテンプレート設定
prompts:
  # システムメッセージテンプレート
  system_messages:
    japanese_assistant: |
      あなたは日本語で回答する親切なAIアシスタントです。
      常に丁寧で分かりやすい日本語で返答してください。
      技術的な内容も初心者に理解できるよう説明してください。

    code_generator: |
      あなたは経験豊富なプログラマーです。
      効率的で読みやすいコードを生成してください。
      コメントは日本語で記述し、ベストプラクティスに従ってください。

    commit_message_generator: |
      あなたはgitコミットメッセージ生成AIです。
      日本語で、:prefix: 説明 の形式で1行のコミットメッセージのみを返答してください。
      余計な説明や文章は含めないでください。

    debug_assistant: |
      あなたはデバッグ専門のAIです。
      エラーの原因を特定し、具体的な解決策を日本語で提案してください。
      手順は番号付きリストで明確に示してください。

  # 特定用途のプロンプトテンプレート
  git_commit:
    base_prompt: |
      次のgit差分から、適切なコミットメッセージを1行で生成してください。

      必須フォーマット: :prefix: 日本語の説明

      利用可能なprefix:
      - :add: 新機能や新ファイルの追加
      - :fix: バグ修正
      - :update: 機能改善や更新
      - :refactor: リファクタリング
      - :docs: ドキュメント
      - :test: テスト
      - :style: フォーマット
      - :config: 設定

      良い例:
      :add: HuggingFace API統合機能
      :fix: Ollama接続タイムアウト修正
      :update: LLMプロバイダー選択ロジック改善

      要件:
      1. 必ず :prefix: で始める
      2. 説明は日本語で具体的に
      3. 最大50文字以内
      4. ファイル名や機能名を含める

    detailed_prompt: |
      {base_prompt}

      重要: より具体的で技術的な詳細を含むコミットメッセージを生成してください。
      ファイル内容や変更の背景を考慮し、開発者が理解しやすい表現を使用してください。

  code_analysis:
    review_prompt: |
      以下のコードを日本語でレビューしてください：

      1. コード品質の評価
      2. 潜在的な問題点の指摘
      3. 改善提案
      4. セキュリティ上の懸念があれば指摘

      技術的な説明は分かりやすく、具体例を含めてください。

    explanation_prompt: |
      以下のコードの動作を日本語で説明してください：

      1. 全体的な目的と機能
      2. 重要な処理の流れ
      3. 使用している技術やライブラリ
      4. 注意すべき点があれば説明

      初心者にも理解できるよう、丁寧に説明してください。

  debugging:
    error_analysis: |
      以下のエラーを分析し、日本語で解決策を提案してください：

      1. エラーの原因分析
      2. 具体的な解決手順
      3. 今後の予防策
      4. 関連する参考情報

      手順は番号付きで明確に示してください。

    performance_optimization: |
      以下のコードのパフォーマンス最適化案を日本語で提案してください：

      1. ボトルネックの特定
      2. 最適化の優先順位
      3. 具体的な改善方法
      4. 期待される効果

      実装が容易なものから順番に説明してください。

# API設定のテンプレート
api_defaults:
  gemini:
    max_tokens: 200
    temperature: 0.3
    safety_settings: strict

  huggingface:
    max_tokens: 200
    temperature: 0.3
    top_p: 0.9

  ollama:
    temperature: 0.3
    top_k: 40
    top_p: 0.9
